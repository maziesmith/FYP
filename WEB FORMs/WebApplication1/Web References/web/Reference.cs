//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34209.
// 
#pragma warning disable 1591

namespace WebApplication1.web {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebService1Soap", Namespace="http://tempuri.org/")]
    public partial class WebService1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback Connectivity_checkOperationCompleted;
        
        private System.Threading.SendOrPostCallback Session_checkOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback Search_ServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback Server_StatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProgressOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService1() {
            this.Url = global::WebApplication1.Properties.Settings.Default.WebApplication1_web_WebService1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event Connectivity_checkCompletedEventHandler Connectivity_checkCompleted;
        
        /// <remarks/>
        public event Session_checkCompletedEventHandler Session_checkCompleted;
        
        /// <remarks/>
        public event RegisterCompletedEventHandler RegisterCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event LogoutCompletedEventHandler LogoutCompleted;
        
        /// <remarks/>
        public event UpdateInfoCompletedEventHandler UpdateInfoCompleted;
        
        /// <remarks/>
        public event UpdatePasswordCompletedEventHandler UpdatePasswordCompleted;
        
        /// <remarks/>
        public event Search_ServiceCompletedEventHandler Search_ServiceCompleted;
        
        /// <remarks/>
        public event Server_StatusCompletedEventHandler Server_StatusCompleted;
        
        /// <remarks/>
        public event ProgressCompletedEventHandler ProgressCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Connectivity_check", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Connectivity_check() {
            object[] results = this.Invoke("Connectivity_check", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Connectivity_checkAsync() {
            this.Connectivity_checkAsync(null);
        }
        
        /// <remarks/>
        public void Connectivity_checkAsync(object userState) {
            if ((this.Connectivity_checkOperationCompleted == null)) {
                this.Connectivity_checkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConnectivity_checkOperationCompleted);
            }
            this.InvokeAsync("Connectivity_check", new object[0], this.Connectivity_checkOperationCompleted, userState);
        }
        
        private void OnConnectivity_checkOperationCompleted(object arg) {
            if ((this.Connectivity_checkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Connectivity_checkCompleted(this, new Connectivity_checkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Session_check", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Session_check(string ID, string g) {
            object[] results = this.Invoke("Session_check", new object[] {
                        ID,
                        g});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Session_checkAsync(string ID, string g) {
            this.Session_checkAsync(ID, g, null);
        }
        
        /// <remarks/>
        public void Session_checkAsync(string ID, string g, object userState) {
            if ((this.Session_checkOperationCompleted == null)) {
                this.Session_checkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSession_checkOperationCompleted);
            }
            this.InvokeAsync("Session_check", new object[] {
                        ID,
                        g}, this.Session_checkOperationCompleted, userState);
        }
        
        private void OnSession_checkOperationCompleted(object arg) {
            if ((this.Session_checkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Session_checkCompleted(this, new Session_checkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Register", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Register(string id, string pwd, string name, string email, string g) {
            object[] results = this.Invoke("Register", new object[] {
                        id,
                        pwd,
                        name,
                        email,
                        g});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterAsync(string id, string pwd, string name, string email, string g) {
            this.RegisterAsync(id, pwd, name, email, g, null);
        }
        
        /// <remarks/>
        public void RegisterAsync(string id, string pwd, string name, string email, string g, object userState) {
            if ((this.RegisterOperationCompleted == null)) {
                this.RegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterOperationCompleted);
            }
            this.InvokeAsync("Register", new object[] {
                        id,
                        pwd,
                        name,
                        email,
                        g}, this.RegisterOperationCompleted, userState);
        }
        
        private void OnRegisterOperationCompleted(object arg) {
            if ((this.RegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterCompleted(this, new RegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Login(string id, string pwd, string g) {
            object[] results = this.Invoke("Login", new object[] {
                        id,
                        pwd,
                        g});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string id, string pwd, string g) {
            this.LoginAsync(id, pwd, g, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string id, string pwd, string g, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        id,
                        pwd,
                        g}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Logout", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Logout(string id, string g) {
            object[] results = this.Invoke("Logout", new object[] {
                        id,
                        g});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LogoutAsync(string id, string g) {
            this.LogoutAsync(id, g, null);
        }
        
        /// <remarks/>
        public void LogoutAsync(string id, string g, object userState) {
            if ((this.LogoutOperationCompleted == null)) {
                this.LogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutOperationCompleted);
            }
            this.InvokeAsync("Logout", new object[] {
                        id,
                        g}, this.LogoutOperationCompleted, userState);
        }
        
        private void OnLogoutOperationCompleted(object arg) {
            if ((this.LogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoutCompleted(this, new LogoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateInfo(string ID, string newName, string newEmail) {
            object[] results = this.Invoke("UpdateInfo", new object[] {
                        ID,
                        newName,
                        newEmail});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateInfoAsync(string ID, string newName, string newEmail) {
            this.UpdateInfoAsync(ID, newName, newEmail, null);
        }
        
        /// <remarks/>
        public void UpdateInfoAsync(string ID, string newName, string newEmail, object userState) {
            if ((this.UpdateInfoOperationCompleted == null)) {
                this.UpdateInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateInfo", new object[] {
                        ID,
                        newName,
                        newEmail}, this.UpdateInfoOperationCompleted, userState);
        }
        
        private void OnUpdateInfoOperationCompleted(object arg) {
            if ((this.UpdateInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInfoCompleted(this, new UpdateInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatePassword(string ID, string pwd) {
            object[] results = this.Invoke("UpdatePassword", new object[] {
                        ID,
                        pwd});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePasswordAsync(string ID, string pwd) {
            this.UpdatePasswordAsync(ID, pwd, null);
        }
        
        /// <remarks/>
        public void UpdatePasswordAsync(string ID, string pwd, object userState) {
            if ((this.UpdatePasswordOperationCompleted == null)) {
                this.UpdatePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePasswordOperationCompleted);
            }
            this.InvokeAsync("UpdatePassword", new object[] {
                        ID,
                        pwd}, this.UpdatePasswordOperationCompleted, userState);
        }
        
        private void OnUpdatePasswordOperationCompleted(object arg) {
            if ((this.UpdatePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePasswordCompleted(this, new UpdatePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Search_Service", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Search_Service(
                    string userID, 
                    string title, 
                    string protDB, 
                    int outputFormat, 
                    string insilico_frag_type, 
                    int filterDB, 
                    int minimum_est_length, 
                    int maximum_est_length, 
                    double pst_tolerance, 
                    double ptm_tolerance, 
                    double MW_tolerance, 
                    string MWTolUnit, 
                    double peptideTol, 
                    double hopThreshhold, 
                    double GUI_mass, 
                    string[] ptm_code_var, 
                    string[] ptm_code_fix, 
                    double tag_error_tol, 
                    string peakListFolder, 
                    string fileType, 
                    string peakListFile, 
                    int autotune, 
                    double tunetol, 
                    string HandleIons) {
            this.Invoke("Search_Service", new object[] {
                        userID,
                        title,
                        protDB,
                        outputFormat,
                        insilico_frag_type,
                        filterDB,
                        minimum_est_length,
                        maximum_est_length,
                        pst_tolerance,
                        ptm_tolerance,
                        MW_tolerance,
                        MWTolUnit,
                        peptideTol,
                        hopThreshhold,
                        GUI_mass,
                        ptm_code_var,
                        ptm_code_fix,
                        tag_error_tol,
                        peakListFolder,
                        fileType,
                        peakListFile,
                        autotune,
                        tunetol,
                        HandleIons});
        }
        
        /// <remarks/>
        public void Search_ServiceAsync(
                    string userID, 
                    string title, 
                    string protDB, 
                    int outputFormat, 
                    string insilico_frag_type, 
                    int filterDB, 
                    int minimum_est_length, 
                    int maximum_est_length, 
                    double pst_tolerance, 
                    double ptm_tolerance, 
                    double MW_tolerance, 
                    string MWTolUnit, 
                    double peptideTol, 
                    double hopThreshhold, 
                    double GUI_mass, 
                    string[] ptm_code_var, 
                    string[] ptm_code_fix, 
                    double tag_error_tol, 
                    string peakListFolder, 
                    string fileType, 
                    string peakListFile, 
                    int autotune, 
                    double tunetol, 
                    string HandleIons) {
            this.Search_ServiceAsync(userID, title, protDB, outputFormat, insilico_frag_type, filterDB, minimum_est_length, maximum_est_length, pst_tolerance, ptm_tolerance, MW_tolerance, MWTolUnit, peptideTol, hopThreshhold, GUI_mass, ptm_code_var, ptm_code_fix, tag_error_tol, peakListFolder, fileType, peakListFile, autotune, tunetol, HandleIons, null);
        }
        
        /// <remarks/>
        public void Search_ServiceAsync(
                    string userID, 
                    string title, 
                    string protDB, 
                    int outputFormat, 
                    string insilico_frag_type, 
                    int filterDB, 
                    int minimum_est_length, 
                    int maximum_est_length, 
                    double pst_tolerance, 
                    double ptm_tolerance, 
                    double MW_tolerance, 
                    string MWTolUnit, 
                    double peptideTol, 
                    double hopThreshhold, 
                    double GUI_mass, 
                    string[] ptm_code_var, 
                    string[] ptm_code_fix, 
                    double tag_error_tol, 
                    string peakListFolder, 
                    string fileType, 
                    string peakListFile, 
                    int autotune, 
                    double tunetol, 
                    string HandleIons, 
                    object userState) {
            if ((this.Search_ServiceOperationCompleted == null)) {
                this.Search_ServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearch_ServiceOperationCompleted);
            }
            this.InvokeAsync("Search_Service", new object[] {
                        userID,
                        title,
                        protDB,
                        outputFormat,
                        insilico_frag_type,
                        filterDB,
                        minimum_est_length,
                        maximum_est_length,
                        pst_tolerance,
                        ptm_tolerance,
                        MW_tolerance,
                        MWTolUnit,
                        peptideTol,
                        hopThreshhold,
                        GUI_mass,
                        ptm_code_var,
                        ptm_code_fix,
                        tag_error_tol,
                        peakListFolder,
                        fileType,
                        peakListFile,
                        autotune,
                        tunetol,
                        HandleIons}, this.Search_ServiceOperationCompleted, userState);
        }
        
        private void OnSearch_ServiceOperationCompleted(object arg) {
            if ((this.Search_ServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Search_ServiceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Server_Status", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Job[] Server_Status() {
            object[] results = this.Invoke("Server_Status", new object[0]);
            return ((Job[])(results[0]));
        }
        
        /// <remarks/>
        public void Server_StatusAsync() {
            this.Server_StatusAsync(null);
        }
        
        /// <remarks/>
        public void Server_StatusAsync(object userState) {
            if ((this.Server_StatusOperationCompleted == null)) {
                this.Server_StatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServer_StatusOperationCompleted);
            }
            this.InvokeAsync("Server_Status", new object[0], this.Server_StatusOperationCompleted, userState);
        }
        
        private void OnServer_StatusOperationCompleted(object arg) {
            if ((this.Server_StatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Server_StatusCompleted(this, new Server_StatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Progress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Progress(string uid) {
            object[] results = this.Invoke("Progress", new object[] {
                        uid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ProgressAsync(string uid) {
            this.ProgressAsync(uid, null);
        }
        
        /// <remarks/>
        public void ProgressAsync(string uid, object userState) {
            if ((this.ProgressOperationCompleted == null)) {
                this.ProgressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProgressOperationCompleted);
            }
            this.InvokeAsync("Progress", new object[] {
                        uid}, this.ProgressOperationCompleted, userState);
        }
        
        private void OnProgressOperationCompleted(object arg) {
            if ((this.ProgressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProgressCompleted(this, new ProgressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Job {
        
        private int progressField;
        
        private int qidField;
        
        private string uidField;
        
        /// <remarks/>
        public int progress {
            get {
                return this.progressField;
            }
            set {
                this.progressField = value;
            }
        }
        
        /// <remarks/>
        public int qid {
            get {
                return this.qidField;
            }
            set {
                this.qidField = value;
            }
        }
        
        /// <remarks/>
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void Connectivity_checkCompletedEventHandler(object sender, Connectivity_checkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Connectivity_checkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Connectivity_checkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void Session_checkCompletedEventHandler(object sender, Session_checkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Session_checkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Session_checkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void RegisterCompletedEventHandler(object sender, RegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void LogoutCompletedEventHandler(object sender, LogoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UpdateInfoCompletedEventHandler(object sender, UpdateInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UpdatePasswordCompletedEventHandler(object sender, UpdatePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void Search_ServiceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void Server_StatusCompletedEventHandler(object sender, Server_StatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Server_StatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Server_StatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Job[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Job[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ProgressCompletedEventHandler(object sender, ProgressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProgressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProgressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591